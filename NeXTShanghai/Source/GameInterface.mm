
/* Generated by Interface Builder */

#import	"TileCountManager.h"
#import	"GameCoordinator.h"

#import "GameInterface.h"

extern "C" {
#import	<assert.h>
}


@implementation GameInterface

- init {

	self = [ super init ];
	
	gameCoordinator		= NULL;
	tileCountManager	= NULL;
	
	return self;
}



- appDidInit:sender {


	assert( tileCountView );
	assert( gameBoardView );
	
	tileCountManager = new TileCountManager( tileCountView );
	gameCoordinator = new GameCoordinator( gameBoardView, tileCountManager );
	
	application_initialized = YES;
	
	[ tileCountView display ];
	[ gameBoardView display ];

	return self;
}


- undoClick:sender {


	(( GameCoordinator* )gameCoordinator )->undoClick();
	
    return self;
}


- helpClick:sender {

	(( GameCoordinator* )gameCoordinator )->helpClick();

    return self;
}


- againClick:sender {


	(( GameCoordinator* )gameCoordinator )->againClick();

    return self;
}

- newClick:sender {


	(( GameCoordinator* )gameCoordinator )->newClick();

    return self;
}


- gameBoardDraw {


	if( application_initialized )
		(( GameCoordinator* )gameCoordinator )->drawImage();
	
	return self;
}


- tileCountDraw {


	if( application_initialized )
		(( TileCountManager* )tileCountManager )->drawImage();
	
	return self;
}


- click:( const NXPoint * )aPoint {


	(( GameCoordinator* )gameCoordinator )->click( aPoint );
	
	return self;
}


- doubleClick:( const NXPoint * )aPoint {


	(( GameCoordinator* )gameCoordinator )->doubleClick( aPoint );

	return self;
}


@end
